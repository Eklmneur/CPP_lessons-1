1)
Если писать значения переменных в теле конструктора,
то получится, что инициализация и присваивание значения
полей объектов класса разделены по времени.
Что неприемлемо для ссылок и константых переменных.
Поэтому для них пишется список инициализации:
до тела конструктора через запятую перечисляются
переменных с присваемыми значеними.

2)
Стандартный: используется просто при создании переменной класса.
Может быть как с аргументами, так и без.
Копирования: (от &class): копирует содержание,
не изменяя первоначального объекта.
От &&class: от временного объекта, копирует содержание,
считая, что первоначальный объект был отдан этому
конструктору на растерзание.

3)
Показать, что объект класса не меняется
(после аргументов и до тела).
Показать, что аргумент не меняется.

4)
Почти как угодно, но должен быть сохранён синтаксис
(унарный оператор остаётся унарным, а бинарный бинарным).
Некоторые операторы перегрузить нельзя: . .* ->
Нельзя перегружать операторы стандартных типов.

5)
Чтобы внешняя функция(класс) могла получить доступ к полям
класса.

6)
Более безопасно (достигается благодаря более сложному устройству, контролю ошибок и исключениям).
Возвращает значение указателя на нужный объект.
